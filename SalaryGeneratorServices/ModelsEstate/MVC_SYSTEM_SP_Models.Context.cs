//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalaryGeneratorServices.ModelsEstate
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data.SqlClient;
    using System.Data.Entity.Core.EntityClient;
    using System.Collections.Generic;

    public partial class MVC_SYSTEM_SP_Models : DbContext
    {
        public static string host1 = "";
        public static string catalog1 = "";
        public static string user1 = "";
        public static string pass1 = "";

        public MVC_SYSTEM_SP_Models(string nameOrConnectionString) : base(nameOrConnectionString)
        {
        }

        public static MVC_SYSTEM_SP_Models ConnectToSqlServer(string host, string catalog, string user, string pass)
        {
            SqlConnectionStringBuilder sqlBuilder = new SqlConnectionStringBuilder();
            sqlBuilder.DataSource = host;
            sqlBuilder.InitialCatalog = catalog;
            sqlBuilder.MultipleActiveResultSets = true;
            sqlBuilder.UserID = user;
            sqlBuilder.Password = pass;
            sqlBuilder.ConnectTimeout = 100;
            sqlBuilder.PersistSecurityInfo = true;
            sqlBuilder.IntegratedSecurity = false;

            var entityConnectionStringBuilder = new EntityConnectionStringBuilder();
            entityConnectionStringBuilder.Provider = "System.Data.SqlClient";
            entityConnectionStringBuilder.ProviderConnectionString = sqlBuilder.ConnectionString;
            entityConnectionStringBuilder.Metadata = "res://*/Models.MVC_SYSTEM_SP_Models.csdl|res://*/Models.MVC_SYSTEM_SP_Models.ssdl|res://*/Models.MVC_SYSTEM_SP_Models.msl";

            return new MVC_SYSTEM_SP_Models(entityConnectionStringBuilder.ConnectionString);

        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual IEnumerable<sp_DistinctKerjaInfoDetails_Result> sp_DistinctKerjaInfoDetails(Nullable<int> year, Nullable<int> month, Nullable<int> negaraID, Nullable<int> syarikatID, Nullable<int> wilayahID, Nullable<int> ladangID, Nullable<int> division)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var negaraIDParameter = negaraID.HasValue ?
                new ObjectParameter("NegaraID", negaraID) :
                new ObjectParameter("NegaraID", typeof(int));
    
            var syarikatIDParameter = syarikatID.HasValue ?
                new ObjectParameter("SyarikatID", syarikatID) :
                new ObjectParameter("SyarikatID", typeof(int));
    
            var wilayahIDParameter = wilayahID.HasValue ?
                new ObjectParameter("WilayahID", wilayahID) :
                new ObjectParameter("WilayahID", typeof(int));
    
            var ladangIDParameter = ladangID.HasValue ?
                new ObjectParameter("LadangID", ladangID) :
                new ObjectParameter("LadangID", typeof(int));
    
            var divisionParameter = division.HasValue ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DistinctKerjaInfoDetails_Result>("sp_DistinctKerjaInfoDetails", yearParameter, monthParameter, negaraIDParameter, syarikatIDParameter, wilayahIDParameter, ladangIDParameter, divisionParameter);
        }
    }
}
